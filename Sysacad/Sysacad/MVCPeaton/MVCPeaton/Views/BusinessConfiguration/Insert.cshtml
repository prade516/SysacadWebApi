@model MVCPeaton.Models.ViewModels.BusinessConfigurationVM

@{
    Layout = null;
    ViewBag.Title = "Configuracion de empresa";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="~/Scripts/modernizr-2.6.2.js"></script>
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/strength.min.js"></script>
    <script src="/Scripts/respond.js"></script>
    <script src="~/Scripts/businessconfigurationScript.js"></script>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/site.css" rel="stylesheet" />
    <script src="/Scripts/bootstrap.js"></script>
    <script src="/Scripts/respond.js"></script>
    <title>Insert</title>
</head>
<body>
    @using (Html.BeginForm("Add", "BusinessConfiguration", FormMethod.Post, new { id = "frmpageadd", name = "frmpageadd", enctype = "multipart/form-data", @class = "formadd" }))
    {
        @Html.AntiForgeryToken()
        @Html.EditorFor(m => m.profilephoto)
        @Html.ValidationMessageFor(model => model.profilephoto)
        <input type="hidden" value="insert" id="view" />
        <input type="hidden" value="@Model.BusinessConfigurationTags.Count" id="countTags" />

        <div class="form-horizontal">
            <h4>BusinessConfigurationVM</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-md-4" style="float:left; align-items:center; text-align: center">
                @Html.Label("Datos generales")
                @*<div class="form-group">
                        @Html.LabelFor(model => model.MyLink, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MyLink, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MyLink, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UpdateLink, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UpdateLink, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UpdateLink, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DeleteLink, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DeleteLink, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DeleteLink, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.slogan, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.slogan, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.slogan, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.profilephoto, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.profilephoto, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.profilephoto, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    @Html.Label("", "Foto", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        <img src="" id="Photo" width="150" height="150">
                        <label for="FileUpload" class="btn btn-primary btn-block btn-outlined" style="width:150px">Seleccionar Foto</label>
                        <input type="file" id="FileUpload" accept="image/*" style="display: none" class="label-file" />
                        @Html.ValidationMessageFor(model => model.profilephoto)
                    </div>
                </div>

                @if (Model.businesstype == "Empresa")
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.quanityemployees, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.quanityemployees, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.quanityemployees, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                @*<div class="form-group">
                        @Html.LabelFor(model => model.iditem, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.iditem, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.iditem, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idbusiness, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.idbusiness, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.idbusiness, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MyEmployeeAccountsLink, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MyEmployeeAccountsLink, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MyEmployeeAccountsLink, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MyBranchesLink, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MyBranchesLink, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MyBranchesLink, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Items, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.iditem, new SelectList(Model.Items, "ID", "Name", Model.iditem), new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.iditem, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Button trigger modal -->
                <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">
                    Set etiquetas
                </button>

                <br />
                <br />

            </div>

            @*<div class="col-md-4" style="float:left; align-items:center; text-align: center">
                    @{int i = 0;}
                    @foreach (var a in Model.EmployeeAccounts)
                    {
                        @Html.Label("Cuenta empleado " + ++i + ": ")

                        <div class="form-group">
                            @Html.LabelFor(b => a.username, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(b => a.username, new { htmlAttributes = new { @class = "form-control", @id = "username" + i } })
                                @Html.ValidationMessageFor(b => a.username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(b => a.password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(b => a.password, new { htmlAttributes = new { @class = "form-control", @id = "password" + i } })
                                @Html.ValidationMessageFor(b => a.password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                </div>*@

            <div class="col-md-4" style="float:left; align-items:center; text-align: center" id="divacc">
                <input type="button" id="createAcc" value="Crear nueva cuenta" />
                <br />
                <br />
            </div>

            <div class="col-md-4" style="float:left; align-items:center; text-align: center" id="divbranch">
                <input type="button" id="createBranch" value="Crear nueva sucursal" />
                <br />
                <br />
            </div>



            @*<div class="col-md-4" style="float:left; align-items:center; text-align: center">
                    @for (int i = 0; i < 5; i++)
                {
                        @Html.Label("Cuenta empleado " + (i + 1) + ": ")

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeAccounts[i].username, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmployeeAccounts[i].username, new { htmlAttributes = new { @class = "form-control", @id = "username" + i } })
                                @Html.ValidationMessageFor(model => model.EmployeeAccounts[i].username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmployeeAccounts[i].password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmployeeAccounts[i].password, new { htmlAttributes = new { @class = "form-control", @id = "password" + i } })
                                @Html.ValidationMessageFor(model => model.EmployeeAccounts[i].password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                </div>

                <div class="col-md-4" style="float:left; align-items:center; text-align: center">
                    @for (int i = 0; i < 15; i++)
                {
                        @Html.Label("Sucursal " + (i + 1) + ": ")

                        <div class="form-group">
                            @Html.LabelFor(model => model.Branches[i].address, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Branches[i].address, new { htmlAttributes = new { @class = "form-control", @id = "username" + i } })
                                @Html.ValidationMessageFor(model => model.Branches[i].address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Branches[i].addressnumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Branches[i].addressnumber, new { htmlAttributes = new { @class = "form-control", @id = "password" + i } })
                                @Html.ValidationMessageFor(model => model.Branches[i].addressnumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Branches[i].name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Branches[i].name, new { htmlAttributes = new { @class = "form-control", @id = "password" + i } })
                                @Html.ValidationMessageFor(model => model.Branches[i].name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                </div>*@

            <!-- Modal -->
            <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="myModalLabel">Etiquetas</h4>
                        </div>
                        <div class="modal-body col-md-12 pre-scrollable">
                            @{
                                for (int i = 0; i < Model.BusinessConfigurationTags.Count; i++)
                                {
                                    <div class="form-group">
                                        @Html.HiddenFor(Model => Model.BusinessConfigurationTags[i].idbusinessconfigurationtag)
                                        @Html.HiddenFor(Model => Model.BusinessConfigurationTags[i].idtag)
                                        <div class="col-md-10">
                                            @Html.DisplayFor(Model => Model.BusinessConfigurationTags[i].Tag.name)
                                        </div>
                                        <div class="col-md-2">
                                            @Html.EditorFor(Model => Model.BusinessConfigurationTags[i].ischecked)
                                        </div>
                                    </div>
                                    <br />
                                }
                            }
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" data-dismiss="modal" id="saveChangeTags">Save changes</button>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Modal -->

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>

        </div>
    }
</body>
</html>