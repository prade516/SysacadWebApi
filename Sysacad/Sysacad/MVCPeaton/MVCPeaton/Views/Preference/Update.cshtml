@model MVCPeaton.Models.ViewModels.Preferences.PreferenceVM

@{
    ViewBag.Title = "Update";
}

@using (Html.BeginForm("Update", "Preference", FormMethod.Post, new { id = "frmupd", name = "frmupd" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal container-fluid">
        <h4>Modificando preferencias</h4>
        <hr />
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
        @Html.HiddenFor(model => model.Id)
        <div>
            <div class="col-md-4 pre-scrollable table-bordered">
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.mybanks)
                            </th>
                            <th></th>
                        </tr>
                        <tr>
                            <th>
                                <form>
                                    @Html.TextBox("bankfilter", "", new { @placeholder = "Filtro" })
                                    <button id="bankreset" type="button" class="close" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </form>
                            </th>
                            <th>

                            </th>
                        </tr>
                    </thead>
                    <tbody id="allbankscontent">
                        @for (int i = 0; i < Model.mybanks.Count; i++)
                {
                            @Html.HiddenFor(Model => Model.mybanks[i].Idbank)
                            @Html.HiddenFor(Model => Model.mybanks[i].Id)
                            @Html.HiddenFor(Model => Model.mybanks[i].Idpreference)
                            @Html.HiddenFor(Model => Model.mybanks[i].State)
                            <tr name="bank">
                                <td>
                                    <img height="40" width="40" id="imgbank-@Model.mybanks[i].Idbank">
                                    @Html.DisplayFor(Model => Model.mybanks[i].Name)
                                </td>
                                <td>
                                    @Html.EditorFor(Model => Model.mybanks[i].ischecked)
                                </td>
                            </tr>
                    }
                    </tbody>
                </table>
            </div>
            <div class="col-md-4 pre-scrollable table-bordered">
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.myitems)
                            </th>
                            <th></th>
                        </tr>
                        <tr>
                            <th>
                                <form>
                                    @Html.TextBox("itemfilter", "", new { @placeholder = "Filtro" })
                                    <button id="itemreset" type="button" class="close" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </form>
                            </th>
                        </tr>
                    </thead>
                    <tbody id="allitemscontent">
                        @for (int i = 0; i < Model.myitems.Count; i++)
                {
                            @Html.HiddenFor(Model => Model.myitems[i].IdItem)
                            @Html.HiddenFor(Model => Model.myitems[i].Id)
                            @Html.HiddenFor(Model => Model.myitems[i].Idpreference)
                            @Html.HiddenFor(Model => Model.myitems[i].State)
                            <tr name="item">
                                <td>
                                    @Html.DisplayFor(Model => Model.myitems[i].Name)
                                </td>
                                <td>
                                    @Html.EditorFor(Model => Model.myitems[i].ischecked)
                                </td>
                            </tr>
                    }
                    </tbody>
                </table>
            </div>
            <div class="col-md-4">
                <div class="pre-scrollable table-bordered">
                    <table name="TagsTable1" class="table">
                        <thead>
                            <tr>
                                <th>
                                    Etiquetas agregadas
                                </th>
                            </tr>
                            <tr>
                                <th>
                                    <form>
                                        @Html.TextBox("selectedtagsfilter", "", new { @placeholder = "Filtro" })
                                        <button id="selectedtagsreset" type="button" class="close" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </form>
                                </th>
                            </tr>
                        </thead>
                        <tbody id="selectedtagscontent">
                            @for (int i = 0; i < Model.mytags.Count; i++)
                {
                    if (Model.mytags[i].ischecked == true)
                    {
                                    <tr name="selectedtag">
                                        @Html.HiddenFor(Model => Model.mytags[i].Idtag)
                                        @Html.HiddenFor(Model => Model.mytags[i].Id)
                                        @Html.HiddenFor(Model => Model.mytags[i].Idpreference)
                                        @Html.HiddenFor(Model => Model.mytags[i].State)
                                        <td>
                                            #@Html.DisplayFor(Model => Model.mytags[i].Name)
                                            <span style="display:none">
                                                @Html.EditorFor(Model => Model.mytags[i].ischecked)
                                            </span>
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    <tr name="selectedtag" style="display:none" hidden>
                                        @Html.HiddenFor(Model => Model.mytags[i].Idtag)
                                        @Html.HiddenFor(Model => Model.mytags[i].Id)
                                        @Html.HiddenFor(Model => Model.mytags[i].Idpreference)
                                        @Html.HiddenFor(Model => Model.mytags[i].State)
                                        <td>
                                            #@Html.DisplayFor(Model => Model.mytags[i].Name)
                                            <span style="display:none">
                                                @Html.EditorFor(Model => Model.mytags[i].ischecked)
                                            </span>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <div style="text-align:center;">
                    <input id="btnVerTodas" type="button" value="Ver todas" class="btn btn-info" />
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-8 col-md-4 pull-right">
                <hr />
                <input id="btnGuardar" type="submit" value="Guardar perfil" class="btn btn-success" />

                <input id="btnBorrarIntereses" type="button" value="Borrar intereses" class="btn btn-warning" />
            </div>
        </div>
    </div>

    <div class="overlay" id="fade">
    </div>
        <div id="light" class="modal">
            <div class="col-md-12" style="margin-top:-16px;margin-right:-32px;padding:0px;">
                <button id="btnCerrar" type="button" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="col-md-6 pre-scrollable">
                <table name="TagsTable2" class="table">
                    <tr>
                        <th>
                            <h4>ETIQUETAS AGREGADAS</h4>
                        </th>
                        <th></th>
                    </tr>

                    @for (int i = 0; i < Model.mytags.Count; i++)
                    {
                        if (Model.mytags[i].ischecked == true)
                        {
                            @Html.HiddenFor(Model => Model.mytags[i].Idtag)
                            <tr name="selectedtagmodal">
                                <td>
                                    #@Html.DisplayFor(Model => Model.mytags[i].Name)
                                    <span style="display:none">
                                        @Html.EditorFor(Model => Model.mytags[i].ischecked)
                                    </span>
                                </td>
                            </tr>
                        }
                        else
                        {
                            @Html.HiddenFor(Model => Model.mytags[i].Idtag)
                            <tr style="display:none">
                                <td>
                                    #@Html.DisplayFor(Model => Model.mytags[i].Name)
                                    <span style="display:none">
                                        @Html.EditorFor(Model => Model.mytags[i].ischecked)
                                    </span>
                                </td>
                            </tr>
                        }
                    }

                </table>
            </div>
            <div class="col-md-6 pre-scrollable">
                <table name="TagsTable3" class="table" id="alltagstable">
                    <thead>
                        <tr>
                            <th>
                                <form>
                                    @Html.TextBox("tagfilter", "", htmlAttributes: new { @class = "col-md-12", @placeholder = "Filtro" })
                                    <button id="tagreset" type="button" class="close" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </form>
                            </th>
                        </tr>
                    </thead>
                    <tbody id="alltagscontent">
                        @for (int i = 0; i < Model.mytags.Count; i++)
                        {
                            @Html.HiddenFor(Model => Model.mytags[i].Idtag)
                            <tr name="tag">
                                <td>
                                    #@Html.DisplayFor(Model => Model.mytags[i].Name)
                                </td>
                                <td>
                                    @Html.EditorFor(Model => Model.mytags[i].ischecked)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div id="confirmReset" class="confirmmodal">
            <div class="col-md-12" style="margin-top:-16px;margin-right:-32px;padding:0px;">
                <button id="btnCerrarConfirm" type="button" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <p>
                <h3>
                    ¿Realmente desea borrar las preferencias?
                </h3>
                <div>
                    <input id="btnConfirm" type="button" value="Aceptar" class="btn btn-primary" />

                    <input id="btnCancel" type="button" value="Cancelar" class="btn btn-danger" />
                </div>
            </p>
        </div>

}


@section styles{
    <style>
           .overlay {
               display: none;
               position: absolute;
               top: 0;
               left: 0;
               width: 100%;
               height: 100%;
               background: #000;
               z-index: 1001;
               opacity: .75;
           }

           .modal {
               display: none;
               position: absolute;
               top: 15%;
               left: 15%;
               width: 70%;
               height: 70%;
               padding: 16px;
               background: #fff;
               color: #333;
               z-index: 1002;
               overflow: auto;
           }

           .confirmmodal {
               text-align:center;
               display: none;
               position: absolute;
               top: 35%;
               left: 35%;
               width: 30%;
               height: 25%;
               padding: 16px;
               background: #fff;
               color: #333;
               z-index: 1003;
               overflow: auto;
           }
    </style>
}

@section scripts{
    <script src="~/Scripts/PreferencesScript.js"></script>

    <script>
        $(document).ready(function () {
            var bancos = @Html.Raw(Json.Encode(@Model.mybanks));
            $.each(bancos, function (key, value) {
                var id = value.Idbank;
                var qualiter = {
                    Fitmode: 2,
                    Height: 40,
                    Widht:40,
                    Quality:100
                };

                var requestData = {
                    localFilePath: JSON.parse(JSON.stringify(value.Logo).replace(/\\""/g, '')),
                    //"sYry+kKq4RzgVpp#mlnwvFuz17aZhDkt4y8X8xQ6wC+iRjmKKwPtGbApi2XLIXx9cxjJgblMBV0PZLV4JOof1gOZRZACo8zR9ROqGUirLU9+V96olnlCyyJiSTh#p4XqXcjlgZ8eXS11e1BORfavlHJClPohZAsShuf5VBFuP18=",
                    qual:qualiter
                };

                $.ajax({
                    type: "POST",
                    url: '/File/DownloadPublicPhoto',
                    data: JSON.stringify(requestData),
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        $.each(response, function (key, value) {
                            $("#imgbank-" + id).attr("class", 'imagen' + key);
                            $("#imgbank-" + id).attr("src", 'data:image/png;base64,' + response.Result);
                            //$(imagen).prependTo('.display-field');
                        });

                    },
                    error: function (error) {
                        
                    }
                });

                function base64encode(binary) {
                    return btoa(unescape(encodeURIComponent(binary)));
                }
            });
        });

    </script>

}