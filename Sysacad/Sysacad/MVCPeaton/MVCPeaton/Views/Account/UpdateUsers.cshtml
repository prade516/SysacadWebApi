@model MVCPeaton.Models.ViewModels.UpdateUserVM
@{
    ViewBag.Title = "Register";

}

<h2>Register</h2>
@using (Html.BeginForm("UpdateUsers", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m=>m.idpeatonusers)
    @Html.EditorFor(m => m.profilephoto)
    @Html.ValidationMessageFor(model => model.profilephoto)
    <h4>Modificar Perfil.</h4>
    <hr />
    @*@Html.ValidationSummary("", new { @class = "text-danger" })*@

    <div class="form-group">
        @Html.LabelFor(m => m.Username, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Username)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LastName)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Email)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmEmail, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ConfirmEmail, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ConfirmEmail)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OldPassword)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Password)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ConfirmPassword)
        </div>
    </div>
    <div class="form-group">
        @Html.Label("", "Foto", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            <img src="" id="Photo" width="150" height="150">
            <label for="FileUpload" class="btn btn-primary btn-block btn-outlined" style="width:150px ">Seleccionar Foto</label>
            <input type="file" id="FileUpload" accept="image/*" style="display: none">
            @*<input type="file" id="FileUpload" multiple />*@
            @*<input type="button" id="Upload" value="Upload" />*@
            @Html.ValidationMessageFor(model => model.profilephoto)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.dni, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.dni, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.dni)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.genres, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.genre, new SelectList(Model.genres, Model.genre))

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.profession, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.profession, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.profession)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.age, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.age, new { @class = "form-control numbersOnly" })
            @Html.ValidationMessageFor(model => model.age)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.provinces, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.idprovince, new SelectList(Model.provinces, "Id", "Name", Model.idprovince), new { id = "provinces" })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.locations, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.idlocation, new SelectList(Model.locations, "Id", "Name", Model.idlocation), new { id = "locations" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.address, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.address, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.address)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.addressnumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.addressnumber, new { @class = "form-control numbersOnly" })
            @Html.ValidationMessageFor(model => model.addressnumber)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="btnsubmit" class="btn btn-default" value="Registrarse" />
        </div>
    </div>
}
@section styles
{
    <link href="~/Content/strength.css" rel="stylesheet" />
}
@section scripts
{

    <script src="~/Scripts/strength.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            $('#age').bind("cut copy paste", function (e) {
                e.preventDefault();
            });
            $('#addressnumber').bind("cut copy paste", function (e) {
                e.preventDefault();
            });
            function EnDisSubmit(event) {
                
                if ($.trim($("#Email").val()) != "" && $.trim($("#Username").val()) != "" && $.trim($("#dni").val()) != "" &&
                    $.trim($("#profilephoto").val()) != "")
                    $("#btnsubmit").removeProp("disabled");
                else
                    $("#btnsubmit").prop("disabled", true);
            };

            $("#btnsubmit").prop("disabled", true);
            
            ExecuteDownload();
            EnDisSubmit();
            $('#Password').strength({
                strengthClass: 'strength',
                strengthMeterClass: 'strength_meter',
                strengthButtonClass: 'button_strength',
                strengthButtonText: 'Mostrar Password',
                strengthButtonTextToggle: 'Ocultar Password'
            });





            function successFunc(data, status) {

                if (data.Data == true) {
                    alert("Duplicado");
                    $("#btnsubmit").prop("disabled", true);
                }
                else {
                    EnDisSubmit();
                }
            }

            function errorFunc() {
                $("#btnsubmit").prop("disabled", true);
            }






        $("#dni").on("blur", function (event) {
            if ($.trim($("#dni").val()) == "" || $("#dni").val().indexOf('.com') > -1) {
                $("#btnsubmit").prop("disabled", true);
                return;
            }
            var serviceURL = '/Account/SearchByDocument';
        var obj = {
            "dni": "" + $.trim($("#dni").val()) + "",
            };

        var jsondata = JSON.stringify(obj);
        $.ajax({
            type: "POST",
            url: serviceURL,
            data: jsondata,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: successFunc,
            error: errorFunc
        });

        });

        $("#Username").on("blur", function (event) {
            
            if ($.trim($("#Username").val()) == "" || $("#Username").val().indexOf('.com') > -1)
            {
                $("#btnsubmit").prop("disabled", true);
                return;
            }

            var serviceURL = '/Account/SearchByUsername';
            var obj = {
                "Username": "" + $.trim($("#Username").val()) + "",
            };

            var jsondata = JSON.stringify(obj);
            $.ajax({
                type: "POST",
                url: serviceURL,
                data: jsondata,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: successFunc,
                error: errorFunc
            });

        });


        $("#Email").on("blur", function (event) {
            if ($.trim($("#Email").val()) == "") {
                $("#btnsubmit").prop("disabled", true);
                return;
            }
            var serviceURL = '/Account/SearchByEmail';
            var obj = {
                "Email": "" + $.trim($("#Email").val()) + "",
            };

            var jsondata = JSON.stringify(obj);
            $.ajax({
                type: "POST",
                url: serviceURL,
                data: jsondata,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: successFunc,
                error: errorFunc
            });

        });






        $('.numbersOnly').keypress(function (e) {
            var verified = (e.which == 8 || e.which == undefined || e.which == 0) ? null : String.fromCharCode(e.which).match(/[^0-9]/);
            if (verified) { e.preventDefault(); }
        });
        function isNumeric(e) {
            var keynum = (!window.event) ? e.which : e.keyCode;
            return !((keynum == 8 || keynum == undefined || e.which == 0) ? null : String.fromCharCode(keynum).match(/[^0-9]/));
        }


        $("#addressnumber").on("keyup", function (event) {

            if ($.trim($("#addressnumber").val().length) == 0) {
                $("#addressnumber").val(0)
                return;
            }
        });

        $('#provinces').change(function () {
            
            //$('#locations').empty();
            $('#locations').html("");

            $.ajax({
                type: "POST",
                url: "/Province/SearchByProvince",
                datatype: "json",
                data: { idprovince: $('#provinces').val() },
                success: function (data) {
                    $.each(data, function (index, value) {
                        $('#locations').append('<option value="' + value.Id + '">' + value.Name + '</option>');
                    });
                }
            });
        });



        function ExecuteUpload() {
            var formData = new FormData();
            var totalFiles = document.getElementById("FileUpload").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("FileUpload").files[i];

                formData.append("FileUpload", file);
            }
            $.ajax({
                type: "POST",
                url: '/File/UploadPublicPhoto',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (response) {
                   
                    alert('succes!!');
                    $("#profilephoto").val(response.Path);
                    EnDisSubmit();
                },
                error: function (error) {
                    alert("errror");
                    $("#profilephoto").val("");
                    EnDisSubmit();
                }
            });
        };


        $("#FileUpload").on("change", function (event) {

            readURL(this);
        });

        function readURL(fileInput) {

            var files = fileInput.files;
            for (var i = 0; i < files.length; i++) {
                var file = files[i];
                var validExtensions = ['jpg', 'jpeg', 'png', 'gif']; //array of valid extensions
                var fileName = file.name;
                var fileNameExt = fileName.substr(fileName.lastIndexOf('.') + 1);
                
                if ($.inArray(fileNameExt, validExtensions) == -1) {

                    alert("Tipo de archivo inválido");
                    ClearFile();
                    EnDisSubmit();
                    event.stopPropagation();
                    event.preventDefault();
                    return false;
                }
                else if (file.size / 1024 / 1024 > 5)
                {
                    alert("No puede subir una imagen mayor a 5 Mb");
                    ClearFile();
                    EnDisSubmit();
                    event.stopPropagation();
                    event.preventDefault();
                    return false;
                }
                var img = document.getElementById("Photo");
                img.file = file;
                var reader = new FileReader();
                reader.onload = (function (aImg) {
                    return function (e) {
                        aImg.src = e.target.result;
                    };
                })(img);
                reader.readAsDataURL(file);
                ExecuteUpload();
            }

        }

        function ClearFile()
        {
            document.getElementById("Photo").src = "";
            document.getElementById("FileUpload").files = null;
            document.getElementById("FileUpload").value = "";
            $("#FileUpload").val("");
            $('#file').replaceWith($('#file').clone());
            $("#profilephoto").val("");
        }

        function clearFileInput(ctrl) {
            try {
                ctrl.value = null;
            } catch (ex) { }
            if (ctrl.value) {
                ctrl.parentNode.replaceChild(ctrl.cloneNode(true), ctrl);
            }
        }


        function ExecuteDownload() {
            
            var qualiter = {
                Fitmode: 4,
                Height: 150,
                Widht: 150,
                Quality: 100
            };

            var requestData = {
                localFilePath: $("#profilephoto").val(),
                qual: qualiter

            };
            $.ajax({
                type: "POST",
                url: '/File/DownloadPublicPhoto',
                data: JSON.stringify(requestData),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    $("#Photo").attr('src', 'data:image/jpeg;base64,' + response.Result);
                },
                error: function (error) {
                    alert("errror");
                }
            });
        };

    })



    </script>

}