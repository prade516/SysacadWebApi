@model MVCPeaton.Models.ViewModels.BusinessProfileVM

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <title>Update</title>
</head>
<body>
    @using (Html.BeginForm("Update", "BusinessProfile", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.idbusinessprofile)
        @Html.HiddenFor(model => model.coverphoto)
        @Html.HiddenFor(Model => Model.Foto1)
        @Html.HiddenFor(Model => Model.Foto2)
        @Html.HiddenFor(Model => Model.Foto3)
        @Html.HiddenFor(Model => Model.Foto4)
        @Html.HiddenFor(Model => Model.Foto5)
        @Html.HiddenFor(Model => Model.Foto6)
        @Html.HiddenFor(Model => Model.Link6)
        @Html.HiddenFor(Model => Model.Link7)
        @Html.HiddenFor(Model => Model.Link8)


        @Html.Hidden("mode", "Update")
        <input type="hidden" value="@Model.Id" id="idScript" />
        <input type="hidden" value="@Model.coverphoto" id="photoScript" />

        <div class="form-horizontal">
            <h4>BusinessProfileVM</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.Label("", "Foto Portada", new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    <img src="" id="Photo" width="450" height="250">
                    <input type="button" id="btnEliminar" value="Eliminar" class="btn btn-primary btn-block btn-outlined" style="width:150px" />
                    <label for="FileUpload" class="btn btn-primary btn-block btn-outlined" style="width:150px">Actualizar Foto</label>
                    <input type="file" id="FileUpload" accept="image/*" style="display: none" class="label-file" />
                    @Html.ValidationMessageFor(model => model.coverphoto)
                </div>
            </div>

            <table class="col-md-12">
                @{
                        int contador = 0;
                        for (int i = 0; i < Model.Photos.Count; i++)
                        {
                            @Html.EditorFor(Model => Model.Photos[i].photo, new { htmlAttributes = new { @class = "form-control", @readonly = true, @style = "display:none" } })
                            <div>
                                @Html.HiddenFor(Model => Model.Photos[i].idphoto)
                                @Html.HiddenFor(Model => Model.Photos[i].idbusinessprofile)
                                @Html.HiddenFor(Model => Model.Photos[i].state)
                                @Html.HiddenFor(Model => Model.Photos[i].photo)
                            <img src="" id="Photo-@Model.Photos[i].idphoto" width="150" height="150">
                            <input type="button" id="btnEliminar-@Model.Photos[i].idphoto" value="Eliminar" class="btn btn-primary btn-block btn-outlined" style="width:150px" />
                            <label for="FileUpload-@Model.Photos[i].idphoto" class="btn btn-primary btn-block btn-outlined" style="width:150px">Modificar</label>
                            <input type="file" id="FileUpload-@Model.Photos[i].idphoto" accept="image/*" style="display: none" class="label-file" />
                            
                             </div>
                             <br />
                        contador++;
                    }
                    for (int i = contador; i < 6; i++)
                    {
                        <div>
                            <img src="" id="Photo-@i" width="150" height="150">
                            <input type="button" id="btnEliminar-@i" value="Eliminar" class="btn btn-primary btn-block btn-outlined" style="width:150px" />
                            <label for="FileUpload-@i" class="btn btn-primary btn-block btn-outlined" style="width:150px">Modificar</label>
                            <input type="file" id="FileUpload-@i" accept="image/*" style="display: none" class="label-file" />
                        </div>
                    }

                    <input hidden id="AgregarPhoto" value="@contador" />
                }

            </table>

            <br />

            <table class="col-md-12">
                @{
                    int cont = 0;
                    for (int i = 0; i < Model.Links.Count; i++)
                    {

                        <div>
                            @if (Model.Links[i].type == 1)
                            {
                                @Html.Label("Twiter");
                                @Html.HiddenFor(Model => Model.Links[i].idlink)
                                @Html.HiddenFor(Model => Model.Links[i].idbusinessprofile)
                                @Html.HiddenFor(Model => Model.Links[i].type)
                                @Html.HiddenFor(Model => Model.Links[i].state)
                                @Html.EditorFor(model => model.Links[i].link, new { htmlAttributes = new { @class = "form-control" } })
                            }
                            else
                            if (Model.Links[i].type == 2)
                            {
                                @Html.Label("Facebook");
                                @Html.HiddenFor(Model => Model.Links[i].idlink)
                                @Html.HiddenFor(Model => Model.Links[i].idbusinessprofile)
                                @Html.HiddenFor(Model => Model.Links[i].type)
                                @Html.HiddenFor(Model => Model.Links[i].state)
                                @Html.EditorFor(model => model.Links[i].link, new { htmlAttributes = new { @class = "form-control" } })
                            }
                            else
                            if (Model.Links[i].type == 3)
                            {
                                @Html.Label("Instagram");
                                @Html.HiddenFor(Model => Model.Links[i].idlink)
                                @Html.HiddenFor(Model => Model.Links[i].idbusinessprofile)
                                @Html.HiddenFor(Model => Model.Links[i].type)
                                @Html.HiddenFor(Model => Model.Links[i].state)
                                @Html.EditorFor(model => model.Links[i].link, new { htmlAttributes = new { @class = "form-control" } })
                            }
                            else
                            if (Model.Links[i].type == 4)
                            {
                                @Html.Label("WebSite");
                                @Html.HiddenFor(Model => Model.Links[i].idlink)
                                @Html.HiddenFor(Model => Model.Links[i].idbusinessprofile)
                                @Html.HiddenFor(Model => Model.Links[i].type)
                                @Html.HiddenFor(Model => Model.Links[i].state)
                                @Html.EditorFor(model => model.Links[i].link, new { htmlAttributes = new { @class = "form-control" } })
                            }
                            else
                            if (Model.Links[i].type == 5)
                            {
                                @Html.Label("Google+");
                                @Html.HiddenFor(Model => Model.Links[i].idlink)
                                @Html.HiddenFor(Model => Model.Links[i].idbusinessprofile)
                                @Html.HiddenFor(Model => Model.Links[i].type)
                                @Html.HiddenFor(Model => Model.Links[i].state)
                                @Html.EditorFor(model => model.Links[i].link, new { htmlAttributes = new { @class = "form-control" } })
                            }
                            else
                            {
                                <label id="Otro-@i" value="Otro">Otro</label>
                                @Html.HiddenFor(Model => Model.Links[i].idlink)
                                @Html.HiddenFor(Model => Model.Links[i].idbusinessprofile)
                                @Html.HiddenFor(Model => Model.Links[i].type)
                                @Html.HiddenFor(Model => Model.Links[i].state)
                                @Html.EditorFor(model => model.Links[i].link, new { htmlAttributes = new { @class = "form-control" } })
                                <input type="button" id="btnEliminarLink-@i" value="Eliminar" class="btn btn-primary btn-block btn-outlined" />

                            }

                        </div>
                        <br />

                        if (Model.Links[i].type == 6)
                        {
                            cont++;
                        }
                    }

                    <div id="divLinkOther">
                        @*Div para agregar los hijos de Links Other*@
                    </div>

                    <br />

                    if (cont >= 3)
                    {
                        <input type="button" id="btnAgregar" value="Agregar" style="display : none" class="btn btn-primary btn-block btn-outlined" @*class="btn btn-default"*@ />
                    }
                    else
                    {
                        <input type="button" id="btnAgregar" value="Agregar" class="btn btn-primary btn-block btn-outlined" @*class="btn btn-default"*@ />
                    }
                    <input hidden id="contAgregar" value="@cont" />


                }


            </table>
            <!-- Modal Links -->
            <div class="modal fade" id="myModalLink" tabindex="-1" role="dialog" aria-labelledby="myModalLabelModify">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                        </div>
                        <div class="modal-body" style="width : 100px">
                            <br>
                            <label id="idlabel">Other</label>
                            <br />
                            Link:
                            <input type="text" id="textLinkModify"><br>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary" id="buttonModify" data-dismiss="modal">Save changes</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-offset-4">
                <div>
                    <br />
                    <input type="submit" value="Save" class="btn btn-primary btn-block btn-outlined" />
                </div>
            </div>
        </div>
                    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

</body>

@section scripts{
    <script src="~/Scripts/BusinessProfile.js"></script>
    <script>

        //Recuperamos el id en en array para modificar las fotos
        var idmodificar=[];
        var btnmodificar=[];
        var btnEliminar=[];
        var nodeIMG;
        var imgChange;
        var numberID;
        var number;
        
        $(document).ready(function () {         
  
            var phv = @Html.Raw(Json.Encode(@Model));

            //...................Para mostrar fotos.................................//
            $.each(phv.Photos, function (Photos, value) {               
                var id= value.idphoto;
                var modificar = id;
                btnmodificar[Photos]=$("#FileUpload-"+id)[0];
                btnEliminar[Photos]=$("#btnEliminar-"+id)[0];
                idmodificar[Photos]=modificar;
                var qualiter = {
                    Fitmode:5,
                    Height: 150,
                    Widht:150,
                    Quality:100
                };

                var requestData = {
                    localFilePath: JSON.parse(JSON.stringify(value.photo).replace(/\\""/g, '')),

                    qual:qualiter
                };

                $.ajax({
                    type: "POST",
                    url: '/File/DownloadPublicPhoto',
                    data: JSON.stringify(requestData),
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        $.each(response, function (key, value) {
                            var asd = document.getElementById("Photo-" + (key.idphoto));
                            $("#Photo-"+id).attr("class", 'imagen' + key);
                            $("#Photo-"+id).attr("src", 'data:image/png;base64,' + response.Result);
                        });

                    },
                    error: function (error) {
                        console.log("errror");
                    }
                });

                function base64encode(binary) {
                    return btoa(unescape(encodeURIComponent(binary)));
                }
            });

            //......................Para reccorer los botones................................//

            for(var i = btnmodificar.length; i<6; i++)
            {
                var modificar = i;
                btnmodificar[i] =$("#FileUpload-"+i)[0];
                btnEliminar[i]=$("#btnEliminar-"+i)[0];
                idmodificar[i]=modificar;
            }
            //.............................Para modificar las fotos..........................................//
            for(var i = 0; i<btnmodificar.length; i++)
            {
                btnmodificar[i].addEventListener("click", function(){
                        var id = this.getAttribute("id");
                        numberID = id.replace("FileUpload-","");
                        number = idmodificar.indexOf(parseInt(numberID));

                        imgChange = "Photo-" + numberID;
                        nodeIMG = $("#" + imgChange);
                });
            }

            function modificar()
            {
                var id = this.getAttribute("id");
                numberID = id.replace("FileUpload-","");
                number = idmodificar.indexOf(parseInt(numberID));

                imgChange = "Photo-" + numberID;
                nodeIMG = $("#" + imgChange);
            }

            for(var i = 0; i<btnmodificar.length; i++)
            {
                var fileupload = document.getElementById("FileUpload-"+idmodificar[i]);
                fileupload.addEventListener("change", read, false);
            }

            function read()
            {
                readURL1(this);
            }

            function ExecuteUpload1() {

                var formData = new FormData();
                var totalFiles = document.getElementById("FileUpload-"+numberID).files.length;
                for (var i = 0; i < totalFiles; i++) {
                    var file = document.getElementById("FileUpload-"+numberID).files[i];

                    formData.append("FileUpload-"+numberID, file);
                }
                $.ajax({
                    type: "POST",
                    url: '/File/UploadPublicPhoto',
                    data: formData,
                    dataType: 'json',
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        debugger;
                        var acum = number + 1;
                        $("#Foto"+acum).val(response.Path);
                    },
                    error: function (error) {
                        var acum = number + 1;
                        $("#Foto"+acum).val("");
                    }
                });
            };

            function readURL1(fileInput) {
                var files = fileInput.files;
            
                if(files == null)
                    return;

                for (var i = 0; i < files.length; i++) {
                    var file = files[i];
                    var validExtensions = ['jpg', 'jpeg', 'png', 'gif']; //array of valid extensions
                    var fileName = file.name;
                    var fileNameExt = fileName.substr(fileName.lastIndexOf('.') + 1);

                    if ($.inArray(fileNameExt, validExtensions) == -1) {

                        console.log("Tipo de archivo inválido");
                        ClearFile();
                        //EnDisSubmit();
                        event.stopPropagation();
                        event.preventDefault();
                        return false;
                    }
                    else if (file.size / 1024 / 1024 > 5)
                    {
                        console.log("No puede subir una imagen mayor a 5 Mb");
                        ClearFile();
                        //EnDisSubmit();
                        event.stopPropagation();
                        event.preventDefault();
                        return false;
                    }

                    console.log(nodeIMG);
                    var img = nodeIMG[0];
                    img.file = file;
                    var reader = new FileReader();
                    reader.onload = (function (aImg) {
                        return function (e) {
                            aImg.src = e.target.result;
                        };
                    })(img);
                    reader.readAsDataURL(file);
                    ExecuteUpload1();
                }

            }

            //function ClearFile()
            //{
            //    document.getElementById("Photo117").src = "";
            //    document.getElementById("FileUpload1").files = null;
            //    document.getElementById("FileUpload1").value = "";
            //    $("#FileUpload1").val("");
            //    $('#file').replaceWith($('#file').clone());
            //    $("#Foto1").val("");
            //}

            //........................Para eliminar las fotos................................................//

            for(var i = 0; i<btnEliminar.length; i++)
            {
                btnEliminar[i].addEventListener("click", eliminar, false);
            }
            function eliminar()
            {
                var id = this.getAttribute("id");
                numberID = id.replace("btnEliminar-","");
                number = idmodificar.indexOf(parseInt(numberID));

                imgChange = "Photo-" + numberID;
                nodeIMG = $("#" + imgChange);
                $("#Photos_"+number+"__state").val(2);
                nodeIMG[0].setAttribute("src","");

            }

            //function EnDisSubmit(event) {

            //    if ($.trim($("#Email").val()) != "" && $.trim($("#Username").val()) != "" && $.trim($("#dni").val()) != "" &&
            //        $.trim($("#coverphoto").val()) != "" && $.trim($("#Foto1").val()) != "")
            //        $("#btnsubmit").removeProp("disabled");
            //    else
            //        $("#btnsubmit").prop("disabled", true);
            //};

            //$("#btnsubmit").prop("disabled", true);

            //function successFunc(data, status) {

            //    if (data.Data == true) {
            //        console.log("Duplicado");
            //        $("#btnsubmit").prop("disabled", true);
            //    }
            //    else {
            //        //EnDisSubmit();
            //    }
            //}

            //function errorFunc() {
            //    $("#btnsubmit").prop("disabled", true);
            //}

            //function isNumeric(e) {
            //    var keynum = (!window.event) ? e.which : e.keyCode;
            //    return !((keynum == 8 || keynum == undefined || e.which == 0) ? null : String.fromCharCode(keynum).match(/[^0-9]/));
            //}

            //.....................Modificar la foto de portada...................//
            $("#FileUpload").on("change", function (event) {

                readURL(this);
            });

       
            function readURL(fileInput) {

                var files = fileInput.files;
                for (var i = 0; i < files.length; i++) {
                    var file = files[i];
                    var validExtensions = ['jpg', 'jpeg', 'png', 'gif']; //array of valid extensions
                    var fileName = file.name;
                    var fileNameExt = fileName.substr(fileName.lastIndexOf('.') + 1);

                    if ($.inArray(fileNameExt, validExtensions) == -1) {

                        console.log("Tipo de archivo inválido");
                        ClearFile();
                        event.stopPropagation();
                        event.preventDefault();
                        return false;
                    }
                    else if (file.size / 1024 / 1024 > 5)
                    {
                        console.log("No puede subir una imagen mayor a 5 Mb");
                        ClearFile();
                        event.stopPropagation();
                        event.preventDefault();
                        return false;
                    }

                    var img = document.getElementById("Photo");
                    img.file = file;
                    var reader = new FileReader();
                    reader.onload = (function (aImg) {
                        return function (e) {
                            aImg.src = e.target.result;
                        };
                    })(img);
                    reader.readAsDataURL(file);
                    ExecuteUpload();
                }

            }

            function ClearFile()
            {
                document.getElementById("Photo").src = "";
                document.getElementById("FileUpload").files = null;
                document.getElementById("FileUpload").value = "";
                $("#FileUpload").val("");
                $('#file').replaceWith($('#file').clone());
                $("#coverphoto").val("");
            }

            function clearFileInput(ctrl) {
                try {
                    ctrl.value = null;
                } catch (ex) { }
                if (ctrl.value) {
                    ctrl.parentNode.replaceChild(ctrl.cloneNode(true), ctrl);
                }
            }
           
            function ExecuteUpload() {
                var formData = new FormData();
                var totalFiles = document.getElementById("FileUpload").files.length;
                for (var i = 0; i < totalFiles; i++) {
                    var file = document.getElementById("FileUpload").files[i];

                    formData.append("FileUpload", file);
                }
                $.ajax({
                    type: "POST",
                    url: '/File/UploadPublicPhoto',
                    data: formData,
                    dataType: 'json',
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        $("#coverphoto").val(response.Path);
                    },
                    error: function (error) {
                        console.log("errror");
                        $("#coverphoto").val("");
                    }
                });
            };

            //...................Borrar foto de portada............................//
        
            $("#btnEliminar").on("click", function(){
                debugger;
            $("#Photo")[0].setAttribute("src","");
            $("#coverphoto").val("");
            $("#btnEliminar").hide();
        });        

        /************Borrar link 6***********************/
        var f ;
        var recuperado;
        $("#btnEliminarLink-5").on("click", function(){
            debugger;
            $("#Links_5__link").remove();
            $("#btnEliminar-5").remove();
            $("#Otro-5").remove();
            var f= $("#contAgregar").val();
            recuperado=parseInt(f);
            recuperado--;
            var h=$("#contAgregar").val(recuperado);
            $("#Links_5__state").val(2);
            if (recuperado<3)
            {
                $("#btnAgregar").show();
            }
        });        
       
        /************Borrar link 7***********************/
        var g ;
        
        $("#btnEliminarLink-6").on("click", function(){
            debugger;
            $("#Links_6__link").remove();
            $("#btnEliminar-6").remove();
            $("#label").hide();
            g = $("#Links_6__link").val();
            $("#Otro-6").hide();
            var f= $("#contAgregar").val();
            recuperado=parseInt(f);
            recuperado--;
            var h=$("#contAgregar").val(recuperado);
            $("#Links_6__state").val(2);
            if (recuperado<3)
            {
                $("#btnAgregar").show();
            }

        });

        /************Borrar link 8***********************/
        var h ;
        $("#btnEliminarLink-7").on("click", function(){
            $("#Links_7__link").hide();
            $("#btnModificar-7").val('Agregar');
            $("#btnEliminar-7").hide();
            h = $("#Links_7__link").val();
            $("#Otro-7").hide();
            var f= $("#contAgregar").val();
            recuperado=parseInt(f);
            recuperado--;
            var h=$("#contAgregar").val(recuperado);
            $("#Links_7__state").val(2);
            if (recuperado<3)
            {
                $("#btnAgregar").show();
            }

        });

        var cont;
        var conini= $("#contAgregar").val();
        var recont;
        
        //Agregar links despues de modificarlos
        $("#btnAgregar").on("click",function(){
            $("#myModalLink").modal('show');
            debugger;
            cont=conini;
            recont=parseInt(cont);
        });

        $("#buttonModify").on("click",function(){
            if (recont<3)
            {
                debugger;
                var position=recont +6;
                var txt = $("<label id='label" + cont + "'>Otro</label> <br/>");
                var txt2 = $("<input type='Text' id='valor" + cont + "'> ");
                var txt3 = $("<input type='button' id='btnEliminar" + cont + "' value='Eliminar'> <br/>");
                var link = $("#textLinkModify").val();

                $("#divLinkOther").append(txt, txt2, txt3);
                $("#valor"+recont).val(link);
                
                cont++;
                $("#Link" +position + "").val(link);
                //$("#contAgregar").val(cont);
            }

            $("#textLinkModify").val();
            if (recont==2)
            {
                $("#btnAgregar").hide();
            }
        });
            debugger;
            var eliminar = document.getElementById("btnEliminar" + recont);
            debugger;
            eliminar.addEventListener("click", removeBtn1, false);
            function removeBtn1()
            {
                debugger;
                var id = this.getAttribute("id");
                var number = id.substr(id.length - 1);
                var toDelete1 = "label" + number;
                var toDelete2 = "valor" + number;
                var toDelete3 = "btnEliminar" + number;
                var nodeToDelete1 = $("#" + toDelete1);
                var nodeToDelete2 = $("#" + toDelete2);
                var nodeToDelete3 = $("#" + toDelete3);
                nodeToDelete1.remove();
                nodeToDelete2.remove();
                nodeToDelete3.remove();
                this.remove();
    
                //btnEliminar[number] = null;
                //cont = number;
                $("#btnAgregar").show();
               // btn.setAttribute("style", "display:block");               
                //var j = recont + 6;
                //$("#Link" + j + "").val("");
            }

            //$("#btnEliminar"+recont).on("click", function(){
            //    debugger;
            //    var btnrecuperado= documethis.getAttribute("id");
            //    var position=recont +6;
            //    $("#valor"+recont).remove();
            //    $("#label"+recont).remove();
            //    $("#Link" +position + "").val("");
            //    $("#btnAgregar").show();
            //    $("#btnEliminar"+recont).remove();
            //    cont--;
            //    $("#contAgregar").val(cont);
            //    recont--;
            //});
       
    });

    </script>
}